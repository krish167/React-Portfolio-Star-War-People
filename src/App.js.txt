import React, { Component } from 'react';
import './App.css';
import '../node_modules/bootstrap/dist/css/bootstrap.min.css';

class App  extends Component {
  constructor(props) {
    super(props);
    this.renderProfList = this.renderProfList.bind(this);
    this.increment = this.increment.bind(this);
    this.decrement = this.decrement.bind(this);
    this.getProfileData = this.getProfileData.bind(this);


    this.state = {
      profileList: [],
      activeIndex: null,
      currentPage: 1,
      nextPage: null,
      prevPage: null
    };

  }

  componentWillMount() {
    this.getProfileData();
  }

  getProfileData() {
    let url = 'https://swapi.co/api/people/?page=';
    let pageNo = this.state.currentPage;
    fetch(url+pageNo)
      .then((response) =>  response.json())
      .then(myJSON => {
          this.setState({
              profileList: myJSON.results,
              activeIndex: myJSON.results.length ? 0 : null,
              currentPage: 1,
              nextPage: myJSON.next,
              prevPage: myJSON.previous
          });
      })
  }

  clickProfile(index) {
    this.setState({
      activeIndex: index,
    });
  }

  renderProfList() {
    const profileName = Object.keys(this.state.profileList).map((value, index) => {
      let status = '';
      if (index === this.state.activeIndex) {
        status = 'active';
      }
      return (
        <li className={status}
          onClick={this.clickProfile.bind(this, index)}
          key={index}>
          {this.state.profileList[value].name}
        </li>
      )
    });
    return profileName;
  }


  increment = ()=>{
    console.log(this.state.currentPage);
    this.setState({
        currentPage: this.state.currentPage+1
    })
    this.getProfileData();
  }
  
  decrement() {
    console.log(this.state.currentPage);
    if (this.state.currentPage >= 1) {
      this.setState({
          currentPage: this.state.currentPage-1
      })
      console.log(this.state.currentPage);
      this.getProfileData();
    } else {
      this.setState({currentPage:1});
    }
  }

  render() {
    return (
      <div className="App">
        <header className="App-header">
          <h1 className="App-title">Star War</h1>
        </header>
        <div className="container">
          <div className="row">
            <div className="col-md-4">
              <ul className="labels">
                {this.renderProfList()}
              </ul>
              <div>
                  <button onClick={this.decrement.bind(this)} value="prev">Prev </button>
                  <button onClick={this.increment.bind(this)} value="next">Next </button>
              </div>
            </div>
            <div className="col-md-4">
          
              <div>
                   {!this.state.profileList.length === 0 && (
                    <span>No data found</span>
                   )}

                   {this.state.profileList.length > 0 && (
                     <div> 
                      {this.state.profileList[this.state.activeIndex].name}
                      <br />
                      {this.state.profileList[this.state.activeIndex].gender}
                      <br />
                      {this.state.profileList[this.state.activeIndex].height}
                      <br />
                      {this.state.profileList[this.state.activeIndex].mass}
                     </div>
                   )}
              </div>
            </div>
          </div>
        </div>
      </div>
    )
  }
}


export default App;
